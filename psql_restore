#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
export PATH="${DIR}:${PATH}"

if [[ -z "$(command -v jq)" ]] ; then
  echo "jq not found"
  exit 1
fi

host="${1}"
user="${2}"
dbname="${3}"
shift
shift
shift

if [[ -z "${host}" ]] || [[ -z "${user}" ]] || [[ -z "${dbname}" ]] ; then
  echo "Usage: ${0} host user dbname"
  exit 1
fi

tf_output=$(terraform output -json)

export AWS_REGION
AWS_REGION=$(echo "${tf_output}" | jq -r '.aws_region.value')
export AWS_PROFILE
AWS_PROFILE=$(echo "${tf_output}" | jq -r '.destination_profile.value')

# destination_account_id=$(echo "${tf_output}" | jq -r '.destination_account_id.value')
# service_namespace=$(echo "${tf_output}" | jq -r '.service_namespace.value')

# assumed_role="$(aws sts assume-role --duration-seconds 3600 --role-arn "arn:aws:iam::${destination_account_id}:role/DBVending-${service_namespace}" --role-session-name "DBVendingAuth")"
# export AWS_ACCESS_KEY_ID
# AWS_ACCESS_KEY_ID="$(echo "${assumed_role}" | jq -r '.Credentials.AccessKeyId')"
# export AWS_SECRET_ACCESS_KEY
# AWS_SECRET_ACCESS_KEY="$(echo "${assumed_role}" | jq -r '.Credentials.SecretAccessKey')"
# export AWS_SESSION_TOKEN
# AWS_SESSION_TOKEN="$(echo "${assumed_role}" | jq -r '.Credentials.SessionToken')"

export PGPASSWORD
PGPASSWORD=$(aws rds generate-db-auth-token --hostname "${host}" --port 5432 --username "${user}")

psql "host=${host} port=5432 sslmode=verify-full sslrootcert=rds-combined-ca-bundle.pem dbname=${dbname} user=${user} password=${PGPASSWORD}" "$@"
